# server.servlet.context-path=

# spring.datasource.url=jdbc:mariadb://localhost:3306/politik
# spring.datasource.username=root
# spring.datasource.password=123456

# spring.jpa.hibernate.ddl-auto=update

# # Esto es al cambiar a mysql
spring.datasource.url=jdbc:mysql://localhost:3306/politik
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}

spring.jpa.hibernate.ddl-auto=update




# Configuración para conectar a MariaDB en Railway
# spring.datasource.url = jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
# spring.datasource.username = ${DB_USER}
# spring.datasource.password = ${DB_PASSWORD}

# # Mostrar las consultas SQL en consola
# spring.jpa.show-sql = true

# # Estrategia de actualización de la base de datos por Hibernate
# spring.jpa.hibernate.ddl-auto = update

# # Clase del controlador JDBC para MariaDB
# spring.datasource.driver-class-name = org.mariadb.jdbc.Driver
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDBDialect
# spring.jpa.properties.hibernate.format_sql = true





# prueba del chaval railway
# spring.datasource.url = jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}

# spring.datasource.username=${DB_USER}
# spring.datasource.password=${DB_PASSWORD}
# # Show or not log for each sql query
# spring.jpa.show-sql=true
# # Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# # schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=update
# # Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.user.datasource.driver-class-name=com.mysql.jdbc.driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# spring.jpa.properties.hibernate.format_sql=true


